* 勉強会全体
    * why
        * CIの利用促進
    * how
        * 勉強会の実施

* ソフトウェアテスト勉強会
    * why
        * テストフェーズで何をすべきかの周知
        * 回帰テスト自動化（ツール利用）の便利さの周知
            * UTの拡充

* CI
    * why
        * CIツールを使いたくなるようなお試しの場を提供
    * how
        * NightlyとCIの比較
        * コミット単位
        * CIの完了基準はCIの正常終了
            * pushで完了ではない。10分以内
    * what
        * 成果物
            * スライド
            * 指導要領
            * 画像src
                * googleドライブでリンクを繋げて他の人でも編集しやすようにする
    * process
        * 1次資料参照 3 -> 1
    * point
        * バッチサイズをコミット単位までに小さくして対応（量）
        * コミット単位で即座対応（タイミング）
        * フィードバックの相手に返す（ヒト）
    * contents
        * Jobスケジューラー
            * 定期的に集計して動かすもの
        * システム
            * 構成要素
                * コアな部分 -> 記録
                    * 一元管理可能
                * 問題
                    * TODOやる事多い
                        * -> 自動化することでメールのやり取りのズレを防ぐ
                        * -> コミュニケーションコストの軽減
                * 解決手段
                    * CIを使うことで迅速化 + コスト削減
        * CI
            * インテグレーション
                * テストできない
        * CD
            * デリバリー
                * 使う為の仕掛け作り
                * 但し、人が判断
            * デプロイメント
                * 判断も自動
        * CI/CDツール
            * Git作成時
                * 楽な仕掛けが作れる
            * 内部レビュー時
                * レビューの仕掛けも自動化
                * 静的解析
            * 外部レビュー時
                * 案件の同期
                * ビルド、デプロイ、回帰テストの自動化
    * supplement
        * メリット5
            * 静的解析
            * モノの経緯
        * CIで求められるプラクティス
            * 上 -> ブラックボックス
            * 下 -> ホワイトボックス
            * 左 -> 機能
            * 右 -> 非機能
        * パイプライン
            * 次への繋ぎ
        * 資料1ーp38
            * NightlyとCIの比較
                * CI -> 最速のフィードバックと最低限のテストを実施
    * summaly
        * やりたいことからリソースまでのリードタイムの短縮
            * 十分な品質前提
